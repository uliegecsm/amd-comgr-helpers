name: Build image, test tools and check package.

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:

env:
    REGISTRY: ghcr.io

jobs:

    set-vars:
        runs-on: ubuntu-latest
        outputs:
            CI_IMAGE : ${{ steps.common.outputs.CI_IMAGE }}
        steps:
            - name: Export common variables.
              id  : common
              run : |
                  echo "CI_IMAGE=${{ env.REGISTRY }}/${{ github.repository }}/amd-comgr-helpers" >> $GITHUB_OUTPUT

    build-image:
        needs: [set-vars]
        runs-on: ubuntu-latest
        container:
            image: docker:latest
        permissions:
            packages: write
            contents: read
        steps:
            - uses: actions/checkout@v4
            - uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - uses: docker/setup-buildx-action@v3
            - uses: docker/build-push-action@v6.7.0
              with:
                  context: .
                  platforms: linux/amd64
                  push: ${{ github.ref == 'refs/heads/main' }}
                  file: docker/dockerfile
                  tags: ${{ needs.set-vars.outputs.CI_IMAGE }}
                  cache-from: type=registry,ref=${{ needs.set-vars.outputs.CI_IMAGE  }}
                  cache-to: type=inline
                  build-args: |
                      BASE_IMAGE=rocm/dev-ubuntu-24.04:6.3.1
                  labels: "org.opencontainers.image.source=${{ github.repositoryUrl }}"

    tests-tools:
        needs: [set-vars, build-image]
        runs-on: ubuntu-latest
        container:
            image: ${{ needs.set-vars.outputs.CI_IMAGE }}
        steps:
            - uses: actions/checkout@v4
            - run: |
                cmake -S . --preset=default --warn-uninitialized -Werror=dev
                cmake --build --preset=default
                ctest --preset=default

    check-package:
        needs: [set-vars, build-image]
        runs-on: ubuntu-latest
        container:
            image: ${{ needs.set-vars.outputs.CI_IMAGE }}
        steps:
            - uses: actions/checkout@v4
            - name: Create package.
              run : |
                cmake -S . --preset=default --warn-uninitialized -Werror=dev
                cmake --build --preset=default --target=package
            - name: Install package.
              run : |
                mkdir -p /opt/amd-comgr-helpers
                tar --extract --verbose --show-transformed \
                    --file=build-with-default/amd-comgr-helpers-0.1.1-Linux.tar.gz \
                    --directory=/opt/amd-comgr-helpers \
                    --strip-components=1
            - name: Test package.
              run : |
                rm -rf *

                export PATH=/opt/amd-comgr-helpers/bin:${PATH}
                which amd-comgr-helpers-parse-code-metadata

                export PYTHONPATH=/opt/amd-comgr-helpers/python:${PYTHONPATH}
                python3 -c "import amd_comgr_helpers.tools.parse_code_metadata as u; print(u);"
